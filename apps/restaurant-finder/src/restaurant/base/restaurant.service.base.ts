/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Restaurant } from "@prisma/client";

export class RestaurantServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.RestaurantCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestaurantCountArgs>
  ): Promise<number> {
    return this.prisma.restaurant.count(args);
  }

  async restaurants<T extends Prisma.RestaurantFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestaurantFindManyArgs>
  ): Promise<Restaurant[]> {
    return this.prisma.restaurant.findMany(args);
  }
  async restaurant<T extends Prisma.RestaurantFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestaurantFindUniqueArgs>
  ): Promise<Restaurant | null> {
    return this.prisma.restaurant.findUnique(args);
  }
  async createRestaurant<T extends Prisma.RestaurantCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestaurantCreateArgs>
  ): Promise<Restaurant> {
    return this.prisma.restaurant.create<T>(args);
  }
  async updateRestaurant<T extends Prisma.RestaurantUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestaurantUpdateArgs>
  ): Promise<Restaurant> {
    return this.prisma.restaurant.update<T>(args);
  }
  async deleteRestaurant<T extends Prisma.RestaurantDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RestaurantDeleteArgs>
  ): Promise<Restaurant> {
    return this.prisma.restaurant.delete(args);
  }
}
